# -*- coding: utf-8 -*-
"""Predicting The House Price.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gdFVaPubOB_rJsTCfMO6qLQGMmw-3eg-

SHRUSHTI SAMANT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re
from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

"""Problem Statement-
Predict the house price based on the given dataset that describes the houses in boston.

Creating a data frame
"""

boston=load_boston()
df=pd.DataFrame(boston.data)

"""EDA - EXPLORATORY DATA ANALYSIS"""

df.head()

"""Adding Coloumns

"""

df.columns = boston.feature_names

df.head()

"""Column Details
CRIM per capita crime rate by town

ZN proportion of residential land zoned for lots over 25,000 sq.ft.

INDUS proportion of non-retail business acres per town

CHAS Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)

NOX nitric oxides concentration (parts per 10 million)

RM average number of rooms per dwelling

AGE proportion of owner-occupied units built prior to 1940

DIS weighted distances to five Boston employment centres

RAD index of accessibility to radial highways

TAX full-value property-tax rate per $10,000

PTRATIO pupil-teacher ratio by town

B 1000(Bk - 0.63)^2 where Bk is the proportion of black people by town

LSTAT % lower status of the population

MEDV Median value of owner-occupied homes in $1000â€™s
"""

df ['PRICE'] = boston.target
df.head(10)

df.tail(10)

df.shape

df.columns

df.dtypes

df.nunique()

df.isnull()

df.isnull().sum()

df.describe()

df.corr

plt.figure(figsize=(10,10))
sns.heatmap(data=df.corr(),annot=True, cmap='Blues')

sns.pairplot(df,size=5)

plt.figure(figsize=(50,50))
df.boxplot()

# min price
df.PRICE.min()

# Max price
df.PRICE.max()

# Standard Deviation
df.PRICE.std()

# Export the dataset
df.to_csv('boston_dataset.csv',)

"""MACHINE LEARNING - LINEAR REGRESSION"""

df.head()

x=np.array(df.drop('PRICE',axis=1))
y=np.array(df.PRICE)

"""SPLITTING THE DATA"""

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

len(x_train)

len(y_train)

len(x_test)

len(y_test)

"""CHOOSING THE MODEL"""

model=LinearRegression()

"""Fitting the model"""

model.fit(x_train,y_train)

model.intercept_

model.coef_

y_test

y_pred=model.predict(x_test)

y_pred

"""TESTING THE MODEL PERFORMANCE"""

model.score(x_test,y_test)